// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/agolarefs": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Return the organization ref list existing in Agola but not in Papagaio",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Return the organization ref list",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/gitsource": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Add a GitSource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitSources"
                ],
                "summary": "Add a GitSource",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.GitSource"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/gitsource/{gitSourceName}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Return a list of Organizations by GitSource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitSources"
                ],
                "summary": "List Git Organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Git Source Name",
                        "name": "gitSourceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.GitSource"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Update a GitSource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitSources"
                ],
                "summary": "Update a GitSource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Git Source Name",
                        "name": "gitSourceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.GitSource"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Remove a GitSource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitSources"
                ],
                "summary": "Remove a GitSource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Git Source Name",
                        "name": "gitSourceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.GitSource"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/gitsources": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Return a list of gitsources",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitSources"
                ],
                "summary": "Return a list of gitsources",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.GitSource"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Return the list of organizations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Return the list of organizations",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/model.Organization"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Branch": {
            "type": "object",
            "properties": {
                "lastFailedRun": {
                    "$ref": "#/definitions/model.RunInfo"
                },
                "lastRuns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RunInfo"
                    }
                },
                "lastSuccessRun": {
                    "$ref": "#/definitions/model.RunInfo"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GitSource": {
            "type": "object",
            "properties": {
                "agolaRemoteSource": {
                    "type": "string"
                },
                "agolaToken": {
                    "type": "string"
                },
                "gitApiUrl": {
                    "type": "string"
                },
                "gitToken": {
                    "type": "string"
                },
                "gitType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Organization": {
            "type": "object",
            "properties": {
                "agolaOrganizationRef": {
                    "type": "string",
                    "example": "TestDemo"
                },
                "behaviourExclude": {
                    "type": "string"
                },
                "behaviourInclude": {
                    "type": "string"
                },
                "behaviourType": {
                    "type": "string",
                    "example": "none"
                },
                "externalUsers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "gitSourceName": {
                    "type": "string",
                    "example": "wecodedev"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "TestDemo"
                },
                "projects": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Project"
                    }
                },
                "userEmailCreator": {
                    "type": "string",
                    "example": "nome.cognome@sorint.it"
                },
                "visibility": {
                    "type": "string",
                    "example": "public"
                },
                "webHookId": {
                    "type": "integer"
                }
            }
        },
        "model.Project": {
            "type": "object",
            "properties": {
                "agolaProjectID": {
                    "type": "string"
                },
                "agolaProjectRef": {
                    "type": "string"
                },
                "archivied": {
                    "type": "boolean"
                },
                "branchs": {
                    "description": "use branch name as key",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Branch"
                    }
                },
                "gitRepoPath": {
                    "type": "string"
                }
            }
        },
        "model.RunInfo": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "runEndDate": {
                    "type": "string"
                },
                "runStartDate": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://login.sorintdev.it/auth/realms/sorinttest/protocol/openid-connect/token"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "papagaio-api.sorintdev.it",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
