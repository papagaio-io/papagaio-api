basePath: /api
definitions:
  model.Branch:
    properties:
      lastFailedRun:
        $ref: '#/definitions/model.RunInfo'
      lastRuns:
        items:
          $ref: '#/definitions/model.RunInfo'
        type: array
      lastSuccessRun:
        $ref: '#/definitions/model.RunInfo'
      name:
        type: string
    type: object
  model.GitSource:
    properties:
      agolaRemoteSource:
        type: string
      agolaToken:
        type: string
      gitApiUrl:
        type: string
      gitToken:
        type: string
      gitType:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  model.Organization:
    properties:
      agolaOrganizationRef:
        example: TestDemo
        type: string
      behaviourExclude:
        type: string
      behaviourInclude:
        type: string
      behaviourType:
        example: none
        type: string
      externalUsers:
        additionalProperties:
          type: boolean
        type: object
      gitSourceName:
        example: wecodedev
        type: string
      id:
        type: string
      name:
        example: TestDemo
        type: string
      projects:
        additionalProperties:
          $ref: '#/definitions/model.Project'
        type: object
      userEmailCreator:
        example: nome.cognome@sorint.it
        type: string
      visibility:
        example: public
        type: string
      webHookId:
        type: integer
    type: object
  model.Project:
    properties:
      agolaProjectID:
        type: string
      agolaProjectRef:
        type: string
      archivied:
        type: boolean
      branchs:
        additionalProperties:
          $ref: '#/definitions/model.Branch'
        description: use branch name as key
        type: object
      gitRepoPath:
        type: string
    type: object
  model.RunInfo:
    properties:
      branch:
        type: string
      id:
        type: string
      phase:
        type: string
      result:
        type: string
      runEndDate:
        type: string
      runStartDate:
        type: string
    type: object
host: papagaio-api.sorintdev.it
info:
  contact: {}
paths:
  /gitsource:
    post:
      description: Add a GitSource
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.GitSource'
        "400":
          description: bad request
      security:
      - OAuth2Password: []
      summary: Add a GitSource
      tags:
      - GitSources
  /gitsource/{gitSourceName}:
    delete:
      description: Remove a GitSource
      parameters:
      - description: Git Source Name
        in: path
        name: gitSourceName
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.GitSource'
        "400":
          description: bad request
      security:
      - OAuth2Password: []
      summary: Remove a GitSource
      tags:
      - GitSources
    get:
      description: Return a list of Organizations by GitSource
      parameters:
      - description: Git Source Name
        in: path
        name: gitSourceName
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.GitSource'
        "400":
          description: bad request
      security:
      - OAuth2Password: []
      summary: List GitOrganizations
      tags:
      - GitSources
    put:
      description: Update a GitSource
      parameters:
      - description: Git Source Name
        in: path
        name: gitSourceName
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.GitSource'
        "400":
          description: bad request
      security:
      - OAuth2Password: []
      summary: Update a GitSource
      tags:
      - GitSources
  /gitsources:
    get:
      description: Return a list of gitsources
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.GitSource'
        "400":
          description: bad request
      security:
      - OAuth2Password: []
      summary: Return a list of gitsources
      tags:
      - GitSources
  /organizations:
    get:
      description: Return the list of organizations
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Organization'
        "400":
          description: bad request
      security:
      - OAuth2Password: []
      summary: Return the list of organizations
      tags:
      - Organization
securityDefinitions:
  OAuth2Password:
    flow: password
    tokenUrl: https://login.sorintdev.it/auth/realms/sorinttest/protocol/openid-connect/token
    type: oauth2
swagger: "2.0"
